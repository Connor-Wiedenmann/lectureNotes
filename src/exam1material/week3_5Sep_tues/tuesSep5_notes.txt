HW 2 due tonight

--> make sure to add images to your git repository!

HW 3 will be posted later today

Exam 1 is Thursday, September 14

//////////////////////////////////////////

Today:
- Review: proving statements are not equivalent; satisfiability
- Prove arguments with truth tables
- Counterexamples to arguments
- Natural deduction rules

/////////////////////////////////////////

Consider:

¬(p ∨ q)  = F

and

¬p ∨ ¬q = T


How would we show they are NOT equivalent?
P = T
q = F
This makes the first stament flase and the second one to be true. 






////////////////////////////////////////

Reminder: satisfiability

Definition?
At least one truth assignents makes the statment true 



Example: (p → ¬q) → r

Is it satisfiable? yes
p = F
q = F
r = T






////////////////////////////////////////

Proving an argument.

*Premises* - pieces of information we are given (assume true)

*Conclusion* - something we are trying to show logically follows
    from our premises.


--> What do we want to show?

///

Proofs with truth tables.

Suppose we know:

    I am in the CS department or I am in the ECE department

    I am not in the ECE department.

    I can log in to the CS lab computers if
        I am in the CS department.


I want to prove:

    I can log in to the CS lab computers
        and I am in the CS department.



--> How would we translate to propositional logic?
p: I am in the cs department 
q: im in the ece department 
r: I can log into CS lab computers
1) 
    p V q 
2) 
 !q
3) 
p -> r

4) r ^ p


    





--> How might we prove this with truth tables?
    (truthTableProof1.logika)


////////////////////////////
(for easy copying)

∧ ∨ ¬ →

////////////////////////////

Another example (truthTableProof2.logika)

Premises:
    p → ¬q
    p → q
    p ∨ q

We wish to prove:

    q     *
---------------
p q r | p V q
--------------
T T T |   T
T T F |   T
T F T |   T
T F F |   T
F T T |   T
F T F |   T 
F F T |   F
F F F |   F 
---------------

contentanit 
- T: [T T T] [ T T F] All the trues 
- F: [F F T] [ F F F]

*
---------------
p q r |  !q
--------------
T T T |   F
T T F |   F
T F T |   T
T F F |   T
F T T |   F
F T F |   F
F F T |   T
F F F |   T
---------------






/////////////////////////////

Showing arguments are invalid.

Example:

Premises:

    If it is sunny, then I wear sunscreen.

    I wear sunscreen.


Proposed conclusion:

    It is sunny.


1) Translate to propositional logic
p = it is sunny 
q = I wear sunscreen 

premises p -> q, q
concusion 
p = F
q = T
This makes all premises true, but makes the conclusion flase. 
Therefore argument is invalid.

2) Find a counter example




////////////////////////////

Downside of proofs with truth tables?











////////////////////////////

New idea: demonstrate conclusion follows from premises using
*natural deduction*

--> use a minimal set of deduction rules

--> for each logical operator
    - *introduction* rule:
        lets us introduce a claim with that operator
        

    - *elimination* rule:
        lets us extract pieces from a claim with that operator

--> apply these rules to create new claims that logically follow



/////////////////////////////////

Want to prove a *sequent* of the form:

    premises ⊢ conclusion

where *premises* is a comma-separated list.





Same idea as truth tables -- want to prove that anytime the premises
are all true, then the conclusion is also true.

--> but we will show the conclusion logically follows using
a series of natural deduction rules instead of truth tables.


////////////////////////////

AND rules idea.

1) What if we wanted to INTRODUCE an AND operator, like:
      P ∧ Q


   --> in what situations do you think we could do that?
if I already had p and already had q 






2) What if we already had an AND statement like  P ∧ Q.

    --> what new claims would make sense using that statement?
    P, Q 



    --> what happened to the AND operator in both cases?
        it was elimanted. 


//////////////////////////

AND rule summaries.


AND introduction:

        P   Q
∧i :  ---------
        P ∧ Q



--> How could we demonstrate this rule in a truth table?




///

AND elimination:

        P ∧ Q              P ∧ Q
 ∧e1 : ---------    ∧e2 : ---------
          P                  Q



--> How could we demonstrate these rules in a truth table?



//////////////////////////////////

What if we knew:

    a ∨ ¬b

and also:

   c -> d

What could we claim with  ∧i?
  (a ∨ ¬b) ^ (c -> d)




//////////////////////////////////

Natural deduction proof syntax.


    premises ⊢ conclusion
    {
        1. claim                justification
        2. claim                justification
        ...
        n. conclusion           justification
    }



claim: a propositional logic statement
justificaton: the rule justifying the corresponding claim
    (along with line numbers as needed to reference previous claims)



/////////////////////////////////

Justifications so far:

    premise

    ∧i lhsNum rhsNum

    ∧e1 andNum

    ∧e2 andNum


////////////////////////////////

Example:

Given premises:  a ∧ b, c
Use natural deduction to prove: b ∧ c




/////////////////////////////////

Using Logika to check our work (and1.logika)
a ∧ b, c ⊢ b ^ c
{
    1. a ^ b premise
    2. c     premise 
    3. a     ^e1 1
    4. b     ^e2 1
    5. b ^ c ^i 4 2
}
// and ^
//or V
// implies, -> 
// not !
//turnstile, |-


/////////////////////////////////

Prove the following sequent (and2.logika)

p, q, r ⊢ r ∧ (q ∧ p)
{
    1. p             premise
    2. q             premise
    3. r             premise
    4.q ^ p          ^i 2 1
    5. r ^ (q^p)     ^i 3 4


}
////////////////////////////////

Prove the following sequent (and3.logika)

p ∧ q ∧ r ⊢ q
{
    1.p^q^r             premise
    2. p ^ q            ^e1 1
    3. q                ^e2 2


}

////////////////////////////////

Example:

if (level >= 9 && age >= 14) {
    if (age <= 18 && level <= 12) {
        //WE ARE HERE
    }
}

--> What premises do we know at that point?

Translate to propositional logic.






--> How could we write an equivalent if-statement?

Translate to propositional logic



--> Use natural deduction to prove that our new conditional
    statement is true whenever the old one is






--> Have we proved the two conditional statements are equivalent?

///////////////////////////////

Next time:

- OR rules in natural deduction
- Using natural deduction to prove two statements are equivalent
- Equivalent if-statements
- If time, implies rules in natural deduction
